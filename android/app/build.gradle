plugins {
  id "com.android.application"
  id "kotlin-android"
  id "dev.flutter.flutter-gradle-plugin"
  id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}


def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdk 34

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "de.asta_bochum.campus_app"
        minSdkVersion 26
        targetSdkVersion 34
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
    namespace 'de.asta_bochum.campus_app'
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.20"
    implementation('androidx.appcompat:appcompat:1.6.1')
    implementation("androidx.appcompat:appcompat-resources:1.6.1")

    // Remove Campus App's requirement of Google Play Services
    //
    // The Dio packages uses [cronet_http] libary to perform network requests. 
    // At default, this libary depends on Google Play services instead of 
    // of the embedded version of Cronet. Setting the embedded version (based on
    // native libaries) here will remove the dependency on Google Play services.
    //
    // Actually, the developers provided a more seamless way for using embedded
    // Cronet by using the Dart environment variable "cronetHttpNoPlay" but while 
    // testing these, this didn't work for our Campus App. 
    //
    // Note: https://github.com/cfug/dio/issues/2042
    // Note: https://github.com/dart-lang/http/blob/master/pkgs/cronet_http/android/build.gradle
    // Note: https://mvnrepository.com/artifact/org.chromium.net/cronet-embedded
    //
    implementation 'org.chromium.net:cronet-embedded:119.6045.31'
}